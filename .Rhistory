source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
View(x)
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
count(x,ShortIndicativ)
count(callbook,ShortIndicativ)
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
View(city_count)
View(county_count)
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
library(sf)
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
dim(city_count)[1]
city_count[4]
city_count[1]
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
View(city_count)
View(city_count)
getll("zalau")
geocode(city_count$LOCALITATEA, method='census')
geocode('Timisoara', method='census')
geo('Timisoara', method='census')
geo('Timisoara', method='osm')
getll('timisoara')
getll('timisoara')
getll('timisoara')
getll('timisoara')
getll('timisoara')
source('~/CallBook/yo_analysis.R')
getll('timisoara')
getll <- function(linie){
cit <- geo(linie, method = 'osm')
print(cit)
return (linie) #(c(cit$lat, cit$long))
}
getll('timisoara')
source('~/CallBook/yo_analysis.R')
getll <- function(linie){
cit <- geo(linie, method = 'osm')
return (c(cit$lat, cit$long))
}
getll('timisoara')
getll('zarnesti')
getll('apahida')
source('~/CallBook/yo_analysis.R')
View(callsign_count)
View(callsign_count)
View(callsign_count)
getll <- function(linie){
cit <- geo(linie, method = 'osm')
print(cit)
return (c(linie, cit$lat, cit$long))
}
getll(city_count$LOCALITATEA)
lapply(city_count$LOCALITATEA, getll)
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
View(cities)
View(cities)
library(osmdata)
library(sf)
library(osmdata)
library(sf)
vancouver_highways <- opq(bbox = 'Vancouver Canada') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
vancouver_highways
plot(vancouver_highways$osm_lines$geometry)
vancouver_highways <- opq(bbox = 'Romania') %>%
add_osm_feature(key = 'highway') %>%
osmdata_sf()
vancouver_highways
plot(vancouver_highways$osm_lines$geometry)
library(mapview)
locations_sf <- st_as_sf(cities, coords = c("long", "lat"), crs = 4326)
#cities[ll] <- lapply(city_count$LOCALITATEA, getll)
cities[ll] <- lapply(county_count$JUDETUL, getll)
View(cities)
source('~/CallBook/yo_analysis.R')
View(cities)
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
View(df)
df <- data.frame(matrix(unlist(cities), nrow=length(cities), byrow=T))
View(df)
getll('arad')
library(mapview)
locations_sf <- st_as_sf(df, coords = c("X3", "X2"), crs = 4326) # X3 long, X2 lat
mapview(locations_sf)
library(tidyr)
df %>% drop_na
locations_sf <- st_as_sf(df %>% drop_na, coords = c("X3", "X2"), crs = 4326) # X3 long, X2 lat
mapview(locations_sf)
View(numaratoare)
source('~/CallBook/yo_analysis.R')
View(cities)
View(df)
View(locations_sf)
mapview(locations_sf)
callbook$FullAddress <- paste(callbook$ADRESA, callbook$LOCALITATEA, callbook$JUDETUL, sep = ", ")
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
View(df)
write.csv(x=df, file="locations_dataframe.csv")
#df %>% drop_na
locations_sf <- st_as_sf(df %>% drop_na, coords = c("X3", "X2"), crs = 4326) # X3 long, X2 lat
# Mapview map
mapview(locations_sf)
source('~/CallBook/yo_analysis.R')
source('~/CallBook/yo_analysis.R')
View(locations)
df <- data.frame(matrix(unlist(locations), nrow=length(locations), byrow=T))
#df %>% drop_na
locations_sf <- st_as_sf(df %>% drop_na, coords = c("X3", "X2"), crs = 4326) # X3 long, X2 lat
# Mapview map
mapview(locations_sf)
beep(sound=4, expr=NULL)
write.csv(x=df, file="locations_dataframe.csv")
View(city_count)
View(callsign_count)
source('~/CallBook/maps.R')
source('~/CallBook/maps.R')
View(map_nz)
mapview(map_nz)
tmap(map_nz)
print(map_nz)
source('~/CallBook/maps.R')
source('~/CallBook/maps.R')
source('~/CallBook/maps.R')
source('~/CallBook/maps.R')
source('~/CallBook/maps.R')
source('~/CallBook/map-cities.R')
mapview(data_df)
library(mapview)
mapview(data_df)
latticeview(data_df)
source('~/CallBook/yo_analysis.R')
View(county_count)
View(counties)
View(callbook)
View(callbook)
View(callbook)
install.packages(c("backports", "broom", "ggplot2", "htmlwidgets", "jsonlite", "pkgbuild", "ps", "rlang", "rmarkdown", "testthat", "tinytex", "vctrs"))
install.packages(c("backports", "BH", "crosstalk", "diffobj", "DT", "gdtools", "htmltools", "leaflet", "rlang", "sf", "sp", "xfun"))
R.version
install.packages(c("backports", "cpp11", "DBI", "dplyr", "fansi", "hms", "htmltools", "Rcpp", "stars", "tibble", "tidygeocoder", "tmap", "tmaptools", "withr"))
library("readxl")
install.packages("tidyverse")
library("tidyverse")
source("~/Documents/work/r-projects/CallBook/yo_analysis.R")
install.packages("mapview")
source("~/Documents/work/r-projects/CallBook/yo_analysis.R")
source("~/Documents/work/r-projects/CallBook/yo_analysis.R")
install.packages("mapview")
install.packages("leaflet")
install.packages(c("terra", "raster", "leaflet"))
install.packages("terra")
install.packages("gdalUtilities")
install.packages("sf")
install.packages("sf")
install.packages(c("gdalUtilities", "units", "sf"))
install.packages("mapview")
install.packages(c("leafem", "leaflet", "leafpop", "raster", "satellite", "sf"))
install.packages("terra")
install.packages("gdalUtilities")
install.packages("sf")
install.packages("gdalUtilities")
install.packages("terra")
install.packages("base64enc")
install.packages("gdalUtilities")
install.packages("sf")
source("~/Documents/work/r-projects/CallBook/yo_analysis.R")
source("~/Documents/work/r-projects/CallBook/yo_analysis.R")
View(callbook)
View(callsign_count)
View(cities)
View(city_count)
View(coordinates)
View(counties)
View(data_df)
View(df)
View(india)
View(locations)
View(map_nz)
View(numaratoare)
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_line(position = "dodge")
source("~/Documents/work/r-projects/CallBook/read_files.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/read_files.R")
source("~/Documents/work/r-projects/CallBook/read_files.R")
source("~/Documents/work/r-projects/CallBook/read_files.R")
source("~/Documents/work/r-projects/CallBook/read_files.R")
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_line(position = "dodge")
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(data = total_callsigns, mapping = aes(x = indicativ, y = `2020-11-16`:`2022-07-18`, fill = origin)) +
geom_bar(position = "dodge")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(ShortIndicativ, n, fill = CLASA)) + geom_bar(position = "dodge")
ggplot(clasa_per_yo, aes(ShortIndicativ, n, fill = CLASA)) + geom_bar()
ggplot(clasa_per_yo, aes(ShortIndicativ, n, fill = CLASA)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(ShortIndicativ, n, fill = CLASA)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col(position = "dodge")
source("~/Documents/work/r-projects/CallBook/read_files.R")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col()
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
View(clasa)
for (f in files) {
print(f)
fname <- tools::file_path_sans_ext(f)
a <- stringr::str_split(fname, "_")
d <- toDate(a[[1]][4], a[[1]][3], a[[1]][2])
col_name = as.character(as.Date(d))
print(col_name)
#read XLSX file
callbook <- read_xlsx(f)
#make column with only first 3 chrs from the callsign
callbook$ShortIndicativ <- substr(callbook$INDICATIVUL, 1,3)
callbook$FullAddress <- paste(callbook$ADRESA, callbook$LOCALITATEA, callbook$JUDETUL, sep = ", ")
glimpse(callbook)
print("Errors in CLASS vs Callsign:")
err <- callbook %>%
filter(stringr::str_length(INDICATIVUL)<6 & CLASA > 2)
print(err)
print("Errors in callsign name:")
err2 <- callbook %>%
filter(!ShortIndicativ %in% districte)
print(err2)
#  expire <- callbook %>%
#    filter( `DATA EXPIRARII` < date())
#  print(expire)
print("Nr callsigns per CLASA:")
clasa <- callbook %>%
group_by(CLASA) %>%
summarize(nr = n())
print(clasa)
print("Nr callsigns per CLASA per district:")
clasa_per_yo <- callbook %>%
group_by(ShortIndicativ) %>%
count(CLASA)
#summarize(nr = n())
print(clasa_per_yo)
#how many radioamateurs per district, county and city
callsign_count <- callbook %>%
count(ShortIndicativ)
print(callsign_count)
total_callsigns <- total_callsigns %>%
inner_join(callsign_count, by = c("indicativ" = "ShortIndicativ")) %>%
rename(!!col_name := n)
#  [col_name] <- callsign_count$ShortIndicativ
beep(sound=10, expr=NULL)
}
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
View(DFtall)
ggplot(DFtall, aes(districte, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col()
ggplot(data = total_callsigns, mapping = aes(x = indicativ, y = `2020-11-16`:`2022-07-18`, fill = origin)) + geom_line()
ggplot(data = total_callsigns, mapping = aes(x = districte, y = `2020-11-16`:`2022-07-18`, fill = origin)) + geom_line()
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_bar(position = position_dodge(preserve = "single"))
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
ggplot(DFtall, aes(districte, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col()
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_bar(position = position_dodge(preserve = "single"))
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_bar(position = "single")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_bar(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n)) + geom_bar(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n)) + geom_bar(stat = "identity")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_bar(stat = "identity")
View(clasa_per_yo)
View(callsign_count)
View(callsign_count)
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
View(cs)
View(cs)
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
cs %>%
ggplot(aes(x = n, colour = quarter)) +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
geom_point(stat = "count") +
geom_line(stat = "count") +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes(x = n, colour = quarter)) +
geom_bar() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes(x = quarter, y = n, colour = quarter)) +
geom_bar() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes(y = n, colour = quarter)) +
geom_bar() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes(x=quarter ,y = n, fill = quarter)) +
geom_bar() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
ggplot(data = cs, mapping = aes(x = quarter)) +
geom_bar() +
facet_wrap(~ ShortIndicativ, ncol = 1)
ggplot(data = cs, mapping = aes(x = quarter)) +
geom_line() +
facet_wrap(~ ShortIndicativ, ncol = 1)
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_line() +
facet_wrap(~ ShortIndicativ, ncol = 1)
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_line() +
facet_wrap(~ ShortIndicativ, ncol = 2)
ggplot(data = cs, mapping = aes(x = quarter, y=n, colour = quarter)) +
geom_line() +
facet_wrap(~ ShortIndicativ, ncol = 2)
ggplot(data = cs, mapping = aes(x = quarter, y=n, colour = quarter)) +
geom_line()
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_line()
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_bar()
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point()
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point() +
facet_wrap(~ ShortIndicativ, ncol = 2)
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point() + geom_line() +
facet_wrap(~ ShortIndicativ, ncol = 2)
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point() + geom_line(stat = "count") +
facet_wrap(~ ShortIndicativ, ncol = 2)
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point() +
facet_wrap(~ ShortIndicativ, ncol = 2)
install.packages(c("DT", "evaluate", "googlesheets4", "rmarkdown", "tinytex", "xfun"))
install.packages(c("nlme", "survival"), lib="/usr/local/Cellar/r/4.2.1/lib/R/library")
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_line() + geom_point() +
facet_wrap(~ ShortIndicativ, ncol = 2)
cs %>%
ggplot(aes(x=quarter ,y = n, fill = quarter)) +
geom_bar() + geom_line() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes( x=quarter, y = n)) +
geom_bar() + geom_line() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes(x=quarter ,y = n, fill = quarter)) +
geom_bar() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes(x=quarter , fill = quarter)) +
geom_bar() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point()
facet_wrap(~ ShortIndicativ, ncol = 2)
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point()
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point()
install.packages("leaflet")
if (!require('devtools')) install.packages('devtools')
devtools::install_github('rstudio/leaflet')
install.packages("devtools")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
DFtall <- total_callsigns %>% gather(key = Quarter, value = Value, `2020-11-16`:`2022-07-18`)
ggplot(DFtall, aes(districte, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col()
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_bar(position = position_dodge(preserve = "single"))
ggplot(data = total_callsigns, mapping = aes(x = districte, y = `2020-11-16`:`2022-07-18`, fill = origin)) + geom_line()
cs %>%
ggplot(aes(x = n, colour = quarter)) +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
geom_point(stat = "count") +
geom_line(stat = "count") +
labs(x="resp (1 to 5)", y="Number of ...")
cs %>%
ggplot(aes(x=quarter ,y = n, fill = quarter)) +
geom_bar() +
facet_wrap(vars(ShortIndicativ), ncol = 2) +
labs(x="resp (1 to 5)", y="Number of ...")
ggplot(data = cs, mapping = aes(x = quarter, y=n)) +
geom_point()
source("~/Documents/work/r-projects/CallBook/read_files.R")
DFtall <- total_callsigns %>% gather(key = Quarter, value = Value, `2020-11-16`:`2022-07-18`)
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge")
DFtall <- total_callsigns %>% gather(key = Quarter, value = Value, `2020-11-16`:`2022-08-16`)
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge") + facet_wrap()
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge") + facet_wrap(vars(indicativ))
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge") + facet_wrap(vars(indicativ), ncol = 2)
ggplot(DFtall, aes(Quarter, Value, fill = Quarter)) + geom_col(position = "dodge") + facet_wrap(vars(indicativ), ncol = 2)
ggplot(DFtall, aes(Quarter, Value, fill = Quarter)) +
geom_col(position = "dodge") +
facet_wrap(vars(indicativ), ncol = 2) +
labs(title = "Numar indicative per district in timp.")
ggplot(DFtall, aes(Quarter, Value, fill = Quarter)) +
geom_col(position = "dodge") +
facet_wrap(vars(indicativ), ncol = 2) +
labs(title = "Numar indicative per district in timp.", x = "Data fisier", y = "Numar indicative")
DFtall <- total_callsigns %>% gather(key = Quarter, value = Value, `2020-11-16`:`2022-08-16`)
ggplot(DFtall, aes(districte, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col()
ggplot(clasa_per_yo, aes(x = ShortIndicativ, y = n, fill = CLASA)) + geom_col() +
labs(title = "Numar indicative 2022-08-16", x = "District", y = "Numar")
print(total_callsigns)
ggplot(DFtall, aes(districte, Value, fill = Quarter)) + geom_col(position = "dodge")
ggplot(DFtall, aes(indicativ, Value, fill = Quarter)) + geom_col(position = "dodge")
View(err)
View(err2)
install.packages("tidygeocoder")
devtools
installed.packages()
install.packages("leaflet")
install.packages("leaflet")
install.packages("leaflet")
library(mapview)
source("~/Documents/work/r-projects/CallBook/leaflet.R")
View(m)
mm <- leaflet() %>%
addTiles() %>%  # Add default OpenStreetMap map tiles
addMarkers(lng=174.768, lat=-36.852, popup="The birthplace of R")
View(mm)
mm
m
install.packages("tidygeocoder")
# functie de citit LAT si LONG in functie de adresa
getll <- function(linie){
cit <- geo(linie, method = 'osm')
return (c(linie, cit$lat, cit$long))
}
### location analysis
locations <- lapply(callbook$FullAddress, getll)
install.packages("osmdata")
library(osmdata)
# functie de citit LAT si LONG in functie de adresa
getll <- function(linie){
cit <- geo(linie, method = 'osm')
return (c(linie, cit$lat, cit$long))
}
### location analysis
locations <- lapply(callbook$FullAddress, getll)
library(mapview)
install.packages("mapview")
install.packages("sf")
install.packages("rgdal")
install.packages("sf")
install.packages(c("Rcpp", "tidyverse"))
source("~/Documents/work/r-projects/CallBook/yo_analysis.R")
install.packages("sf")
install.packages("devtools")
install.packages("gert")
install.packages("gert")
install.packages("devtools")
install.packages("ragg")
install.packages("textshaping")
library(mapview)
library(sf)
library(sf)
install.packages("sf")
install.packages(c("dtplyr", "forcats", "gert", "hms", "httr", "modelr", "patchwork", "pillar", "readxl", "reprex", "rvest", "scales", "stringr"))
install.packages(c("MASS", "nlme", "survival"), lib="/usr/local/Cellar/r/4.2.1_2/lib/R/library")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
View(callbook_latest)
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
View(callbook_latest)
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
View(cb_latest)
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/get_all_locations.r")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
View(callbook)
View(callbook)
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
View(expirate)
View(expirate)
View(callbook)
View(callbook)
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
source("~/Documents/work/r-projects/CallBook/errors_in_callbooks.R")
